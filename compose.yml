services:
  postgres:
    image: ${POSTGRES_IMAGE:-postgres:15-alpine}
    container_name: ${POSTGRES_CONTAINER_NAME:-postgres}
    labels:
      com.example.description: 'PostgreSQL service'
      com.example.environment: '${ENVIRONMENT:-production}'
      com.example.version: '${VERSION:-1.0}'
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgrespassword}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    networks:
      - app_network
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        compress: 'true'

  redis:
    image: ${REDIS_IMAGE:-redis:7-alpine}
    container_name: ${REDIS_CONTAINER_NAME:-redis}
    labels:
      com.example.description: 'Redis service'
      com.example.environment: '${ENVIRONMENT:-production}'
      com.example.version: '${VERSION:-1.0}'
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword} --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - '${REDIS_PORT:-6379}:6379'
    networks:
      - app_network
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        compress: 'true'

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  backup:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /tmp/backup
